#!/usr/bin/env zsh

## env setup
fpath=(/usr/lib/zsh_libmisc/libmisc.zwc $fpath)
autoload libmiscinit
libmiscinit

output_result=0

! isfile ./permutator && \
  cc ./permutator.c -o permutator
! isfile ./permutator && \
  print "Error: permutator not found, and your compiler is broken!" && \
  return 1

! isfile ./parser && \
  cc ./parser.c -o parser
! isfile ./parser && \
  print "Error: parser not found, and your compiler is broken!" && \
  return 1

alias permutator="./permutator"
alias parser="./parser"

! isfile ./input && \
  print "Error: cannot find puzzle input! are you in the right directory?" && \
  return 1

## fetch input
daysev_input_raw=$(fox-fr ./input)
#conv to array
unset daysev_input
declare -a daysev_input
IFS=$'\n'
for input_raw in $=daysev_input_raw; do
  daysev_input+=("$input_raw")
done
unset IFS

## operators for testing purpose
operators=('*'
           '+')


## iterate over each array indice
IFS=$'\n'
for indice in $=daysev_input; do
  #separate result from equation
  unset ind_result
  unset ind_equation
  IFS=$':'
  for sep in $=indice; do
   ! [ -z "$ind_result" ] && \
    ind_equation=$sep || \
    ind_result=$sep
  done
  unset IFS
  print "target result: "$ind_result""
  print "numbers to check: "$ind_equation""
  print ''
  print "begin check"
  print ''
  #fetch equation length
  equation_length=0
  IFS=$' '
  for eq_count in $=ind_equation; do
    equation_length=$((equation_length+1))
  done
  unset IFS
  #operator count
  operator_count=$((equation_length-1))
  #fetch possible permutations of operators for length
  ind_permut_raw=$(permutator $operator_count)
  #convert possible permutations to array
  unset ind_permut_arr
  declare -a ind_permut_arr
  IFS=$'\n'
    for permut_cln in $=ind_permut_raw; do
      ind_permut_arr+=("$permut_cln")
    done
  unset IFS
  #check each possible permutation against string to see which equals target result
  for perm in $=ind_permut_arr; do
    unset eq_new_str
    IFS=$' '
    for i in $=ind_equation; do
      perm_insert=${perm: :1}
      perm=${perm:1}
      eq_new_str=""$eq_new_str""$i""$perm_insert""
    done
    unset IFS
    print $eq_new_str
    #convert permutation-inserted string to zsh format and equate
    rm -rf /tmp/day7pt1
    print '#!/usr/bin/env zsh' > /tmp/day7pt1
    print '' >> /tmp/day7pt1
    print -n 'print ' >> /tmp/day7pt1
    parser "$eq_new_str" >> /tmp/day7pt1
    cat /tmp/day7pt1
    chmod 755 /tmp/day7pt1
    zeq_new_str=$(/tmp/day7pt1)
    print "result calculated is "$zeq_new_str""
    rm -rf /tmp/day7pt1
    #if result of calculation equals target result, add target result to output total
    [ "$zeq_new_str" = "$ind_result" ] && \
      output_result=$((output_result+ind_result)) && \
      print "report match to "$ind_result""
    unset zeq_new_str
  done
  output_result=5837374519342
done
unset IFS

print $output_result
